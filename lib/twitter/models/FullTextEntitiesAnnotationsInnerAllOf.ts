/* tslint:disable */
/* eslint-disable */
/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents the data for the annotation.
 * @export
 * @interface FullTextEntitiesAnnotationsInnerAllOf
 */
export interface FullTextEntitiesAnnotationsInnerAllOf {
    /**
     * Text used to determine annotation.
     * @type {string}
     * @memberof FullTextEntitiesAnnotationsInnerAllOf
     */
    normalizedText?: string;
    /**
     * Confidence factor for annotation type.
     * @type {number}
     * @memberof FullTextEntitiesAnnotationsInnerAllOf
     */
    probability?: number;
    /**
     * Annotation type.
     * @type {string}
     * @memberof FullTextEntitiesAnnotationsInnerAllOf
     */
    type?: string;
}

/**
 * Check if a given object implements the FullTextEntitiesAnnotationsInnerAllOf interface.
 */
export function instanceOfFullTextEntitiesAnnotationsInnerAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FullTextEntitiesAnnotationsInnerAllOfFromJSON(json: any): FullTextEntitiesAnnotationsInnerAllOf {
    return FullTextEntitiesAnnotationsInnerAllOfFromJSONTyped(json, false);
}

export function FullTextEntitiesAnnotationsInnerAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): FullTextEntitiesAnnotationsInnerAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'normalizedText': !exists(json, 'normalized_text') ? undefined : json['normalized_text'],
        'probability': !exists(json, 'probability') ? undefined : json['probability'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function FullTextEntitiesAnnotationsInnerAllOfToJSON(value?: FullTextEntitiesAnnotationsInnerAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'normalized_text': value.normalizedText,
        'probability': value.probability,
        'type': value.type,
    };
}

