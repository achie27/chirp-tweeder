/* tslint:disable */
/* eslint-disable */
/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FieldUnauthorizedProblemAllOf
 */
export interface FieldUnauthorizedProblemAllOf {
    /**
     * 
     * @type {string}
     * @memberof FieldUnauthorizedProblemAllOf
     */
    field: string;
    /**
     * 
     * @type {string}
     * @memberof FieldUnauthorizedProblemAllOf
     */
    resourceType: FieldUnauthorizedProblemAllOfResourceTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof FieldUnauthorizedProblemAllOf
     */
    section: FieldUnauthorizedProblemAllOfSectionEnum;
}


/**
 * @export
 */
export const FieldUnauthorizedProblemAllOfResourceTypeEnum = {
    User: 'user',
    Tweet: 'tweet',
    Media: 'media',
    List: 'list',
    Space: 'space'
} as const;
export type FieldUnauthorizedProblemAllOfResourceTypeEnum = typeof FieldUnauthorizedProblemAllOfResourceTypeEnum[keyof typeof FieldUnauthorizedProblemAllOfResourceTypeEnum];

/**
 * @export
 */
export const FieldUnauthorizedProblemAllOfSectionEnum = {
    Data: 'data',
    Includes: 'includes'
} as const;
export type FieldUnauthorizedProblemAllOfSectionEnum = typeof FieldUnauthorizedProblemAllOfSectionEnum[keyof typeof FieldUnauthorizedProblemAllOfSectionEnum];


/**
 * Check if a given object implements the FieldUnauthorizedProblemAllOf interface.
 */
export function instanceOfFieldUnauthorizedProblemAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "field" in value;
    isInstance = isInstance && "resourceType" in value;
    isInstance = isInstance && "section" in value;

    return isInstance;
}

export function FieldUnauthorizedProblemAllOfFromJSON(json: any): FieldUnauthorizedProblemAllOf {
    return FieldUnauthorizedProblemAllOfFromJSONTyped(json, false);
}

export function FieldUnauthorizedProblemAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): FieldUnauthorizedProblemAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'field': json['field'],
        'resourceType': json['resource_type'],
        'section': json['section'],
    };
}

export function FieldUnauthorizedProblemAllOfToJSON(value?: FieldUnauthorizedProblemAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'field': value.field,
        'resource_type': value.resourceType,
        'section': value.section,
    };
}

