/* tslint:disable */
/* eslint-disable */
/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CashtagEntity } from './CashtagEntity';
import {
    CashtagEntityFromJSON,
    CashtagEntityFromJSONTyped,
    CashtagEntityToJSON,
} from './CashtagEntity';
import type { FullTextEntitiesAnnotationsInner } from './FullTextEntitiesAnnotationsInner';
import {
    FullTextEntitiesAnnotationsInnerFromJSON,
    FullTextEntitiesAnnotationsInnerFromJSONTyped,
    FullTextEntitiesAnnotationsInnerToJSON,
} from './FullTextEntitiesAnnotationsInner';
import type { HashtagEntity } from './HashtagEntity';
import {
    HashtagEntityFromJSON,
    HashtagEntityFromJSONTyped,
    HashtagEntityToJSON,
} from './HashtagEntity';
import type { MentionEntity } from './MentionEntity';
import {
    MentionEntityFromJSON,
    MentionEntityFromJSONTyped,
    MentionEntityToJSON,
} from './MentionEntity';
import type { UrlEntity } from './UrlEntity';
import {
    UrlEntityFromJSON,
    UrlEntityFromJSONTyped,
    UrlEntityToJSON,
} from './UrlEntity';

/**
 * 
 * @export
 * @interface FullTextEntities
 */
export interface FullTextEntities {
    /**
     * 
     * @type {Array<FullTextEntitiesAnnotationsInner>}
     * @memberof FullTextEntities
     */
    annotations?: Array<FullTextEntitiesAnnotationsInner>;
    /**
     * 
     * @type {Array<CashtagEntity>}
     * @memberof FullTextEntities
     */
    cashtags?: Array<CashtagEntity>;
    /**
     * 
     * @type {Array<HashtagEntity>}
     * @memberof FullTextEntities
     */
    hashtags?: Array<HashtagEntity>;
    /**
     * 
     * @type {Array<MentionEntity>}
     * @memberof FullTextEntities
     */
    mentions?: Array<MentionEntity>;
    /**
     * 
     * @type {Array<UrlEntity>}
     * @memberof FullTextEntities
     */
    urls?: Array<UrlEntity>;
}

/**
 * Check if a given object implements the FullTextEntities interface.
 */
export function instanceOfFullTextEntities(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FullTextEntitiesFromJSON(json: any): FullTextEntities {
    return FullTextEntitiesFromJSONTyped(json, false);
}

export function FullTextEntitiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): FullTextEntities {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'annotations': !exists(json, 'annotations') ? undefined : ((json['annotations'] as Array<any>).map(FullTextEntitiesAnnotationsInnerFromJSON)),
        'cashtags': !exists(json, 'cashtags') ? undefined : ((json['cashtags'] as Array<any>).map(CashtagEntityFromJSON)),
        'hashtags': !exists(json, 'hashtags') ? undefined : ((json['hashtags'] as Array<any>).map(HashtagEntityFromJSON)),
        'mentions': !exists(json, 'mentions') ? undefined : ((json['mentions'] as Array<any>).map(MentionEntityFromJSON)),
        'urls': !exists(json, 'urls') ? undefined : ((json['urls'] as Array<any>).map(UrlEntityFromJSON)),
    };
}

export function FullTextEntitiesToJSON(value?: FullTextEntities | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'annotations': value.annotations === undefined ? undefined : ((value.annotations as Array<any>).map(FullTextEntitiesAnnotationsInnerToJSON)),
        'cashtags': value.cashtags === undefined ? undefined : ((value.cashtags as Array<any>).map(CashtagEntityToJSON)),
        'hashtags': value.hashtags === undefined ? undefined : ((value.hashtags as Array<any>).map(HashtagEntityToJSON)),
        'mentions': value.mentions === undefined ? undefined : ((value.mentions as Array<any>).map(MentionEntityToJSON)),
        'urls': value.urls === undefined ? undefined : ((value.urls as Array<any>).map(UrlEntityToJSON)),
    };
}

