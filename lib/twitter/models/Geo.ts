/* tslint:disable */
/* eslint-disable */
/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Point } from './Point';
import {
    PointFromJSON,
    PointFromJSONTyped,
    PointToJSON,
} from './Point';

/**
 * 
 * @export
 * @interface Geo
 */
export interface Geo {
    /**
     * 
     * @type {Array<number>}
     * @memberof Geo
     */
    bbox: Array<number>;
    /**
     * 
     * @type {Point}
     * @memberof Geo
     */
    geometry?: Point;
    /**
     * 
     * @type {object}
     * @memberof Geo
     */
    properties: object;
    /**
     * 
     * @type {string}
     * @memberof Geo
     */
    type: GeoTypeEnum;
}


/**
 * @export
 */
export const GeoTypeEnum = {
    Feature: 'Feature'
} as const;
export type GeoTypeEnum = typeof GeoTypeEnum[keyof typeof GeoTypeEnum];


/**
 * Check if a given object implements the Geo interface.
 */
export function instanceOfGeo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "bbox" in value;
    isInstance = isInstance && "properties" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function GeoFromJSON(json: any): Geo {
    return GeoFromJSONTyped(json, false);
}

export function GeoFromJSONTyped(json: any, ignoreDiscriminator: boolean): Geo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bbox': json['bbox'],
        'geometry': !exists(json, 'geometry') ? undefined : PointFromJSON(json['geometry']),
        'properties': json['properties'],
        'type': json['type'],
    };
}

export function GeoToJSON(value?: Geo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bbox': value.bbox,
        'geometry': PointToJSON(value.geometry),
        'properties': value.properties,
        'type': value.type,
    };
}

