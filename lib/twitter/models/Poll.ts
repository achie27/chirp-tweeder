/* tslint:disable */
/* eslint-disable */
/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PollOption } from './PollOption';
import {
    PollOptionFromJSON,
    PollOptionFromJSONTyped,
    PollOptionToJSON,
} from './PollOption';

/**
 * Represent a Poll attached to a Tweet.
 * @export
 * @interface Poll
 */
export interface Poll {
    /**
     * 
     * @type {number}
     * @memberof Poll
     */
    durationMinutes?: number;
    /**
     * 
     * @type {Date}
     * @memberof Poll
     */
    endDatetime?: Date;
    /**
     * Unique identifier of this poll.
     * @type {string}
     * @memberof Poll
     */
    id: string;
    /**
     * 
     * @type {Array<PollOption>}
     * @memberof Poll
     */
    options: Array<PollOption>;
    /**
     * 
     * @type {string}
     * @memberof Poll
     */
    votingStatus?: PollVotingStatusEnum;
}


/**
 * @export
 */
export const PollVotingStatusEnum = {
    Open: 'open',
    Closed: 'closed'
} as const;
export type PollVotingStatusEnum = typeof PollVotingStatusEnum[keyof typeof PollVotingStatusEnum];


/**
 * Check if a given object implements the Poll interface.
 */
export function instanceOfPoll(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "options" in value;

    return isInstance;
}

export function PollFromJSON(json: any): Poll {
    return PollFromJSONTyped(json, false);
}

export function PollFromJSONTyped(json: any, ignoreDiscriminator: boolean): Poll {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'durationMinutes': !exists(json, 'duration_minutes') ? undefined : json['duration_minutes'],
        'endDatetime': !exists(json, 'end_datetime') ? undefined : (new Date(json['end_datetime'])),
        'id': json['id'],
        'options': ((json['options'] as Array<any>).map(PollOptionFromJSON)),
        'votingStatus': !exists(json, 'voting_status') ? undefined : json['voting_status'],
    };
}

export function PollToJSON(value?: Poll | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'duration_minutes': value.durationMinutes,
        'end_datetime': value.endDatetime === undefined ? undefined : (value.endDatetime.toISOString()),
        'id': value.id,
        'options': ((value.options as Array<any>).map(PollOptionToJSON)),
        'voting_status': value.votingStatus,
    };
}

