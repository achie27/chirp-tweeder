/* tslint:disable */
/* eslint-disable */
/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UsageCapExceededProblemAllOf
 */
export interface UsageCapExceededProblemAllOf {
    /**
     * 
     * @type {string}
     * @memberof UsageCapExceededProblemAllOf
     */
    period?: UsageCapExceededProblemAllOfPeriodEnum;
    /**
     * 
     * @type {string}
     * @memberof UsageCapExceededProblemAllOf
     */
    scope?: UsageCapExceededProblemAllOfScopeEnum;
}


/**
 * @export
 */
export const UsageCapExceededProblemAllOfPeriodEnum = {
    Daily: 'Daily',
    Monthly: 'Monthly'
} as const;
export type UsageCapExceededProblemAllOfPeriodEnum = typeof UsageCapExceededProblemAllOfPeriodEnum[keyof typeof UsageCapExceededProblemAllOfPeriodEnum];

/**
 * @export
 */
export const UsageCapExceededProblemAllOfScopeEnum = {
    Account: 'Account',
    Product: 'Product'
} as const;
export type UsageCapExceededProblemAllOfScopeEnum = typeof UsageCapExceededProblemAllOfScopeEnum[keyof typeof UsageCapExceededProblemAllOfScopeEnum];


/**
 * Check if a given object implements the UsageCapExceededProblemAllOf interface.
 */
export function instanceOfUsageCapExceededProblemAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UsageCapExceededProblemAllOfFromJSON(json: any): UsageCapExceededProblemAllOf {
    return UsageCapExceededProblemAllOfFromJSONTyped(json, false);
}

export function UsageCapExceededProblemAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): UsageCapExceededProblemAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'period': !exists(json, 'period') ? undefined : json['period'],
        'scope': !exists(json, 'scope') ? undefined : json['scope'],
    };
}

export function UsageCapExceededProblemAllOfToJSON(value?: UsageCapExceededProblemAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'period': value.period,
        'scope': value.scope,
    };
}

