/* tslint:disable */
/* eslint-disable */
/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A request to create a new batch compliance job.
 * @export
 * @interface CreateComplianceJobRequest
 */
export interface CreateComplianceJobRequest {
    /**
     * User-provided name for a compliance job.
     * @type {string}
     * @memberof CreateComplianceJobRequest
     */
    name?: string;
    /**
     * If true, this endpoint will return a pre-signed URL with resumable uploads enabled.
     * @type {boolean}
     * @memberof CreateComplianceJobRequest
     */
    resumable?: boolean;
    /**
     * Type of compliance job to list.
     * @type {string}
     * @memberof CreateComplianceJobRequest
     */
    type: CreateComplianceJobRequestTypeEnum;
}


/**
 * @export
 */
export const CreateComplianceJobRequestTypeEnum = {
    Tweets: 'tweets',
    Users: 'users'
} as const;
export type CreateComplianceJobRequestTypeEnum = typeof CreateComplianceJobRequestTypeEnum[keyof typeof CreateComplianceJobRequestTypeEnum];


/**
 * Check if a given object implements the CreateComplianceJobRequest interface.
 */
export function instanceOfCreateComplianceJobRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function CreateComplianceJobRequestFromJSON(json: any): CreateComplianceJobRequest {
    return CreateComplianceJobRequestFromJSONTyped(json, false);
}

export function CreateComplianceJobRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateComplianceJobRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'resumable': !exists(json, 'resumable') ? undefined : json['resumable'],
        'type': json['type'],
    };
}

export function CreateComplianceJobRequestToJSON(value?: CreateComplianceJobRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'resumable': value.resumable,
        'type': value.type,
    };
}

