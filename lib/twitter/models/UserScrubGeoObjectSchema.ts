/* tslint:disable */
/* eslint-disable */
/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserComplianceSchemaUser } from './UserComplianceSchemaUser';
import {
    UserComplianceSchemaUserFromJSON,
    UserComplianceSchemaUserFromJSONTyped,
    UserComplianceSchemaUserToJSON,
} from './UserComplianceSchemaUser';

/**
 * 
 * @export
 * @interface UserScrubGeoObjectSchema
 */
export interface UserScrubGeoObjectSchema {
    /**
     * Event time.
     * @type {Date}
     * @memberof UserScrubGeoObjectSchema
     */
    eventAt: Date;
    /**
     * Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
     * @type {string}
     * @memberof UserScrubGeoObjectSchema
     */
    upToTweetId: string;
    /**
     * 
     * @type {UserComplianceSchemaUser}
     * @memberof UserScrubGeoObjectSchema
     */
    user: UserComplianceSchemaUser;
}

/**
 * Check if a given object implements the UserScrubGeoObjectSchema interface.
 */
export function instanceOfUserScrubGeoObjectSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "eventAt" in value;
    isInstance = isInstance && "upToTweetId" in value;
    isInstance = isInstance && "user" in value;

    return isInstance;
}

export function UserScrubGeoObjectSchemaFromJSON(json: any): UserScrubGeoObjectSchema {
    return UserScrubGeoObjectSchemaFromJSONTyped(json, false);
}

export function UserScrubGeoObjectSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserScrubGeoObjectSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'eventAt': (new Date(json['event_at'])),
        'upToTweetId': json['up_to_tweet_id'],
        'user': UserComplianceSchemaUserFromJSON(json['user']),
    };
}

export function UserScrubGeoObjectSchemaToJSON(value?: UserScrubGeoObjectSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'event_at': (value.eventAt.toISOString()),
        'up_to_tweet_id': value.upToTweetId,
        'user': UserComplianceSchemaUserToJSON(value.user),
    };
}

