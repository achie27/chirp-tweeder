/* tslint:disable */
/* eslint-disable */
/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FullTextEntities } from './FullTextEntities';
import {
    FullTextEntitiesFromJSON,
    FullTextEntitiesFromJSONTyped,
    FullTextEntitiesToJSON,
} from './FullTextEntities';
import type { UserEntitiesUrl } from './UserEntitiesUrl';
import {
    UserEntitiesUrlFromJSON,
    UserEntitiesUrlFromJSONTyped,
    UserEntitiesUrlToJSON,
} from './UserEntitiesUrl';

/**
 * A list of metadata found in the User's profile description.
 * @export
 * @interface UserEntities
 */
export interface UserEntities {
    /**
     * 
     * @type {FullTextEntities}
     * @memberof UserEntities
     */
    description?: FullTextEntities;
    /**
     * 
     * @type {UserEntitiesUrl}
     * @memberof UserEntities
     */
    url?: UserEntitiesUrl;
}

/**
 * Check if a given object implements the UserEntities interface.
 */
export function instanceOfUserEntities(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserEntitiesFromJSON(json: any): UserEntities {
    return UserEntitiesFromJSONTyped(json, false);
}

export function UserEntitiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserEntities {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : FullTextEntitiesFromJSON(json['description']),
        'url': !exists(json, 'url') ? undefined : UserEntitiesUrlFromJSON(json['url']),
    };
}

export function UserEntitiesToJSON(value?: UserEntities | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': FullTextEntitiesToJSON(value.description),
        'url': UserEntitiesUrlToJSON(value.url),
    };
}

