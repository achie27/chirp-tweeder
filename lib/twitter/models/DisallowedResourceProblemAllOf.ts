/* tslint:disable */
/* eslint-disable */
/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DisallowedResourceProblemAllOf
 */
export interface DisallowedResourceProblemAllOf {
    /**
     * 
     * @type {string}
     * @memberof DisallowedResourceProblemAllOf
     */
    resourceId: string;
    /**
     * 
     * @type {string}
     * @memberof DisallowedResourceProblemAllOf
     */
    resourceType: DisallowedResourceProblemAllOfResourceTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof DisallowedResourceProblemAllOf
     */
    section: DisallowedResourceProblemAllOfSectionEnum;
}


/**
 * @export
 */
export const DisallowedResourceProblemAllOfResourceTypeEnum = {
    User: 'user',
    Tweet: 'tweet',
    Media: 'media',
    List: 'list',
    Space: 'space'
} as const;
export type DisallowedResourceProblemAllOfResourceTypeEnum = typeof DisallowedResourceProblemAllOfResourceTypeEnum[keyof typeof DisallowedResourceProblemAllOfResourceTypeEnum];

/**
 * @export
 */
export const DisallowedResourceProblemAllOfSectionEnum = {
    Data: 'data',
    Includes: 'includes'
} as const;
export type DisallowedResourceProblemAllOfSectionEnum = typeof DisallowedResourceProblemAllOfSectionEnum[keyof typeof DisallowedResourceProblemAllOfSectionEnum];


/**
 * Check if a given object implements the DisallowedResourceProblemAllOf interface.
 */
export function instanceOfDisallowedResourceProblemAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "resourceId" in value;
    isInstance = isInstance && "resourceType" in value;
    isInstance = isInstance && "section" in value;

    return isInstance;
}

export function DisallowedResourceProblemAllOfFromJSON(json: any): DisallowedResourceProblemAllOf {
    return DisallowedResourceProblemAllOfFromJSONTyped(json, false);
}

export function DisallowedResourceProblemAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): DisallowedResourceProblemAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'resourceId': json['resource_id'],
        'resourceType': json['resource_type'],
        'section': json['section'],
    };
}

export function DisallowedResourceProblemAllOfToJSON(value?: DisallowedResourceProblemAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'resource_id': value.resourceId,
        'resource_type': value.resourceType,
        'section': value.section,
    };
}

