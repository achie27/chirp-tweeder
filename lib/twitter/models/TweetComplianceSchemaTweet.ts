/* tslint:disable */
/* eslint-disable */
/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TweetComplianceSchemaTweet
 */
export interface TweetComplianceSchemaTweet {
    /**
     * Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
     * @type {string}
     * @memberof TweetComplianceSchemaTweet
     */
    authorId: string;
    /**
     * Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
     * @type {string}
     * @memberof TweetComplianceSchemaTweet
     */
    id: string;
}

/**
 * Check if a given object implements the TweetComplianceSchemaTweet interface.
 */
export function instanceOfTweetComplianceSchemaTweet(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "authorId" in value;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function TweetComplianceSchemaTweetFromJSON(json: any): TweetComplianceSchemaTweet {
    return TweetComplianceSchemaTweetFromJSONTyped(json, false);
}

export function TweetComplianceSchemaTweetFromJSONTyped(json: any, ignoreDiscriminator: boolean): TweetComplianceSchemaTweet {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'authorId': json['author_id'],
        'id': json['id'],
    };
}

export function TweetComplianceSchemaTweetToJSON(value?: TweetComplianceSchemaTweet | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'author_id': value.authorId,
        'id': value.id,
    };
}

