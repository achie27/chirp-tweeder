/* tslint:disable */
/* eslint-disable */
/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ComplianceJobStatus } from './ComplianceJobStatus';
import {
    ComplianceJobStatusFromJSON,
    ComplianceJobStatusFromJSONTyped,
    ComplianceJobStatusToJSON,
} from './ComplianceJobStatus';
import type { ComplianceJobType } from './ComplianceJobType';
import {
    ComplianceJobTypeFromJSON,
    ComplianceJobTypeFromJSONTyped,
    ComplianceJobTypeToJSON,
} from './ComplianceJobType';

/**
 * 
 * @export
 * @interface ComplianceJob
 */
export interface ComplianceJob {
    /**
     * Creation time of the compliance job.
     * @type {Date}
     * @memberof ComplianceJob
     */
    createdAt: Date;
    /**
     * Expiration time of the download URL.
     * @type {Date}
     * @memberof ComplianceJob
     */
    downloadExpiresAt: Date;
    /**
     * URL from which the user will retrieve their compliance results.
     * @type {string}
     * @memberof ComplianceJob
     */
    downloadUrl: string;
    /**
     * Compliance Job ID.
     * @type {string}
     * @memberof ComplianceJob
     */
    id: string;
    /**
     * User-provided name for a compliance job.
     * @type {string}
     * @memberof ComplianceJob
     */
    name?: string;
    /**
     * 
     * @type {ComplianceJobStatus}
     * @memberof ComplianceJob
     */
    status: ComplianceJobStatus;
    /**
     * 
     * @type {ComplianceJobType}
     * @memberof ComplianceJob
     */
    type: ComplianceJobType;
    /**
     * Expiration time of the upload URL.
     * @type {Date}
     * @memberof ComplianceJob
     */
    uploadExpiresAt: Date;
    /**
     * URL to which the user will upload their Tweet or user IDs.
     * @type {string}
     * @memberof ComplianceJob
     */
    uploadUrl: string;
}

/**
 * Check if a given object implements the ComplianceJob interface.
 */
export function instanceOfComplianceJob(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "downloadExpiresAt" in value;
    isInstance = isInstance && "downloadUrl" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "uploadExpiresAt" in value;
    isInstance = isInstance && "uploadUrl" in value;

    return isInstance;
}

export function ComplianceJobFromJSON(json: any): ComplianceJob {
    return ComplianceJobFromJSONTyped(json, false);
}

export function ComplianceJobFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComplianceJob {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['created_at'])),
        'downloadExpiresAt': (new Date(json['download_expires_at'])),
        'downloadUrl': json['download_url'],
        'id': json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'status': ComplianceJobStatusFromJSON(json['status']),
        'type': ComplianceJobTypeFromJSON(json['type']),
        'uploadExpiresAt': (new Date(json['upload_expires_at'])),
        'uploadUrl': json['upload_url'],
    };
}

export function ComplianceJobToJSON(value?: ComplianceJob | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created_at': (value.createdAt.toISOString()),
        'download_expires_at': (value.downloadExpiresAt.toISOString()),
        'download_url': value.downloadUrl,
        'id': value.id,
        'name': value.name,
        'status': ComplianceJobStatusToJSON(value.status),
        'type': ComplianceJobTypeToJSON(value.type),
        'upload_expires_at': (value.uploadExpiresAt.toISOString()),
        'upload_url': value.uploadUrl,
    };
}

