/* tslint:disable */
/* eslint-disable */
/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A [GeoJson Point](https://tools.ietf.org/html/rfc7946#section-3.1.2) geometry object.
 * @export
 * @interface Point
 */
export interface Point {
    /**
     * A [GeoJson Position](https://tools.ietf.org/html/rfc7946#section-3.1.1) in the format `[longitude,latitude]`.
     * @type {Array<number>}
     * @memberof Point
     */
    coordinates: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof Point
     */
    type: PointTypeEnum;
}


/**
 * @export
 */
export const PointTypeEnum = {
    Point: 'Point'
} as const;
export type PointTypeEnum = typeof PointTypeEnum[keyof typeof PointTypeEnum];


/**
 * Check if a given object implements the Point interface.
 */
export function instanceOfPoint(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "coordinates" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function PointFromJSON(json: any): Point {
    return PointFromJSONTyped(json, false);
}

export function PointFromJSONTyped(json: any, ignoreDiscriminator: boolean): Point {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'coordinates': json['coordinates'],
        'type': json['type'],
    };
}

export function PointToJSON(value?: Point | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'coordinates': value.coordinates,
        'type': value.type,
    };
}

