/* tslint:disable */
/* eslint-disable */
/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MuteUserMutationResponseData } from './MuteUserMutationResponseData';
import {
    MuteUserMutationResponseDataFromJSON,
    MuteUserMutationResponseDataFromJSONTyped,
    MuteUserMutationResponseDataToJSON,
} from './MuteUserMutationResponseData';
import type { Problem } from './Problem';
import {
    ProblemFromJSON,
    ProblemFromJSONTyped,
    ProblemToJSON,
} from './Problem';

/**
 * 
 * @export
 * @interface MuteUserMutationResponse
 */
export interface MuteUserMutationResponse {
    /**
     * 
     * @type {MuteUserMutationResponseData}
     * @memberof MuteUserMutationResponse
     */
    data?: MuteUserMutationResponseData;
    /**
     * 
     * @type {Array<Problem>}
     * @memberof MuteUserMutationResponse
     */
    errors?: Array<Problem>;
}

/**
 * Check if a given object implements the MuteUserMutationResponse interface.
 */
export function instanceOfMuteUserMutationResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MuteUserMutationResponseFromJSON(json: any): MuteUserMutationResponse {
    return MuteUserMutationResponseFromJSONTyped(json, false);
}

export function MuteUserMutationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MuteUserMutationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': !exists(json, 'data') ? undefined : MuteUserMutationResponseDataFromJSON(json['data']),
        'errors': !exists(json, 'errors') ? undefined : ((json['errors'] as Array<any>).map(ProblemFromJSON)),
    };
}

export function MuteUserMutationResponseToJSON(value?: MuteUserMutationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': MuteUserMutationResponseDataToJSON(value.data),
        'errors': value.errors === undefined ? undefined : ((value.errors as Array<any>).map(ProblemToJSON)),
    };
}

