/* tslint:disable */
/* eslint-disable */
/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A Twitter List is a curated group of accounts.
 * @export
 * @interface List
 */
export interface List {
    /**
     * 
     * @type {Date}
     * @memberof List
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof List
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof List
     */
    followerCount?: number;
    /**
     * The unique identifier of this List.
     * @type {string}
     * @memberof List
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof List
     */
    memberCount?: number;
    /**
     * The name of this List.
     * @type {string}
     * @memberof List
     */
    name: string;
    /**
     * Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
     * @type {string}
     * @memberof List
     */
    ownerId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof List
     */
    _private?: boolean;
}

/**
 * Check if a given object implements the List interface.
 */
export function instanceOfList(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function ListFromJSON(json: any): List {
    return ListFromJSONTyped(json, false);
}

export function ListFromJSONTyped(json: any, ignoreDiscriminator: boolean): List {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'followerCount': !exists(json, 'follower_count') ? undefined : json['follower_count'],
        'id': json['id'],
        'memberCount': !exists(json, 'member_count') ? undefined : json['member_count'],
        'name': json['name'],
        'ownerId': !exists(json, 'owner_id') ? undefined : json['owner_id'],
        '_private': !exists(json, 'private') ? undefined : json['private'],
    };
}

export function ListToJSON(value?: List | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'description': value.description,
        'follower_count': value.followerCount,
        'id': value.id,
        'member_count': value.memberCount,
        'name': value.name,
        'owner_id': value.ownerId,
        'private': value._private,
    };
}

