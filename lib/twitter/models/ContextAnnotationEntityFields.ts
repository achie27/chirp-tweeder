/* tslint:disable */
/* eslint-disable */
/**
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents the data for the context annotation entity.
 * @export
 * @interface ContextAnnotationEntityFields
 */
export interface ContextAnnotationEntityFields {
    /**
     * Description of the context annotation entity.
     * @type {string}
     * @memberof ContextAnnotationEntityFields
     */
    description?: string;
    /**
     * The unique id for a context annotation entity.
     * @type {string}
     * @memberof ContextAnnotationEntityFields
     */
    id: string;
    /**
     * Name of the context annotation entity.
     * @type {string}
     * @memberof ContextAnnotationEntityFields
     */
    name?: string;
}

/**
 * Check if a given object implements the ContextAnnotationEntityFields interface.
 */
export function instanceOfContextAnnotationEntityFields(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function ContextAnnotationEntityFieldsFromJSON(json: any): ContextAnnotationEntityFields {
    return ContextAnnotationEntityFieldsFromJSONTyped(json, false);
}

export function ContextAnnotationEntityFieldsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContextAnnotationEntityFields {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'id': json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
    };
}

export function ContextAnnotationEntityFieldsToJSON(value?: ContextAnnotationEntityFields | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'id': value.id,
        'name': value.name,
    };
}

